﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace Mate_Production_AI
{
    public partial class Predict_IdleTimes
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"AverageIdleTime", @"AverageIdleTime"),new InputOutputColumnPair(@"CurrentAmount", @"CurrentAmount"),new InputOutputColumnPair(@"NewArrivaledOrders", @"NewArrivaledOrders"),new InputOutputColumnPair(@"OpenOrders", @"OpenOrders")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"AverageIdleTime",@"CurrentAmount",@"NewArrivaledOrders",@"OpenOrders"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=51,MinimumExampleCountPerLeaf=96,NumberOfIterations=12,MaximumBinCountPerFeature=8,LearningRate=0.512300777165039F,LabelColumnName=@"NextIdleTime",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=0.989628740475018F,FeatureFraction=0.44858303322709F,L1Regularization=1.62755445012826E-07F,L2Regularization=26.9220805091699F}}));

            return pipeline;
        }
    }
}
