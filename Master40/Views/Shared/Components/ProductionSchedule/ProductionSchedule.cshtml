
<form method="post" asp-action="Index" onchange="submitform()">
    <div class="form-inline">
        <h5>Filter Options</h5>
        <hr />
        <div class="col-md-5">
            <div class="form-group">
                <label class="control-label col-md-4">Order</label>
                <div class="col-md-8">
                    <select class="form-control" asp-items="ViewBag.OrderId" id="fcOrder" name="Order" ></select>
                </div>
            </div>
        </div>        
        <div class="col-md-7">
            <div class="form-group">
                <label class="control-label col-md-4">State of Planning</label>
                <div class="col-md-8">
                    <select class="form-control" asp-items="ViewBag.SchedulingState" id="fcState" name="SchedulingState"></select>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div id="gantt_here" style="width: 100%; height: 500px;"></div>
        </div>
    </div>
    <!--
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Apply" class="btn btn-default" />
        </div>
    </div>
    -->
</form>



<script type="text/javascript">
    gantt.config.row_height = 24;
    gantt.config.scale_height = 50;
    gantt.config.readonly = true;
    //gantt.config.date_grid = "%H:%i";
    gantt.config.scale_unit = "minute";
    gantt.config.duration_unit = "minute";
    gantt.config.date_scale = "%H:%i";
    //gantt.config.autofit = false;
    gantt.config.fit_tasks = true; 

    gantt.config.subscales = [
        {unit:"day", step:1, date:"%j, %D" }
    ];

    gantt.templates.rightside_text = function(start, end, task){
        if(task.type == gantt.config.types.milestone){
            return task.text;
        }
        return "";
    };
    gantt.config.lightbox.sections = [
        {name: "description", height: 70, map_to: "text", type: "textarea", focus: true},
        {name: "type", type: "typeselect", map_to: "type"},
        {name: "time", type: "duration", map_to: "auto"}
    ];
    gantt.init("gantt_here");

    function createBox(sizes, class_name){
        var box = document.createElement('div');
        box.style.cssText = [
            "height:" + sizes.height + "px",
            "line-height:" + sizes.height + "px",
            "width:" + sizes.width + "px",
            "top:" + sizes.top + 'px',
            "left:" + sizes.left + "px",
            "position:absolute"
        ].join(";");
        box.className = class_name;
        return box;
    }

    gantt.templates.grid_row_class = gantt.templates.task_class=function(start, end, task){
        var css = [];
        if(gantt.hasChild(task.id)){
            css.push("task-parent");
        }
        if (!task.$open && gantt.hasChild(task.id)) {
            css.push("task-collapsed");
        }

        return css.join(" ");
    };

    gantt.addTaskLayer(function show_hidden(task) {
        if (!task.$open && gantt.hasChild(task.id)) {
            var sub_height = gantt.config.row_height - 5,
                el = document.createElement('div'),
                sizes = gantt.getTaskPosition(task);

            var sub_tasks = gantt.getChildren(task.id);

            var child_el;

            for (var i = 0; i < sub_tasks.length; i++){
                var child = gantt.getTask(sub_tasks[i]);
                var child_sizes = gantt.getTaskPosition(child);

                child_el = createBox({
                    height: sub_height,
                    top:sizes.top,
                    left:child_sizes.left,
                    width: child_sizes.width
                }, "child_preview gantt_task_line");
                child_el.innerHTML =  child.text;
                el.appendChild(child_el);
            }
            return el;
        }
        return false;
    });

    gantt.templates.tooltip_text = function(start,end,task){
        return "<b>Task:</b> "+task.desc+"<br/><b>Start date:</b> " + 
            gantt.templates.tooltip_date_format(start)+ 
            "<br/><b>End date:</b> "+gantt.templates.tooltip_date_format(end);
    };



    function addTaskToGantt() {
        var taskId = gantt.addTask({
            id:24,
            text:"New Task",
            start_date:"02-04-2013  00:05",
            end_date:"02-04-2013  00:08",
            //duration:5,
            parent: 12,
            progress: 0
        });
        var linkId = gantt.addLink({
            id:13,
            source:12,
            target:24,
            type:"1"
        });
    }
</script>
<script>

    $(document).ready(
        function () {
        var demo_tasks = {
            "data": //  @Html.Raw("")
            [
                { "id": 11, "text": "Order #1", "desc": "SomeToolTipText", "type": "project", "progress": 0.0, "open": true, "start_date": "02-04-2013 00:00", "parent": 0, color: "orange" },
                { "id": 12, "text": "Task #1", "desc": "SomeToolTipText", "start_date": "02-04-2013 00:00", "duration": 3, "parent": "11", "progress": 1, "open": false /* colapse at start */ },
                { "id": 13, "text": "Task #2", "desc": "SomeToolTipText", "start_date": "02-04-2013 00:03", "type": "project", "parent": "11", "progress": 0.5, "open": false, "duration": 2 }
            ],
            "links": [
                { "id": "10", "source": "11", "target": "12", "type": "1" },
                { "id": "11", "source": "11", "target": "13", "type": "1" },
                { "id": "12", "source": "11", "target": "14", "type": "1" }
            ]
        };

        gantt.parse(demo_tasks);
        }
    );

</script>

