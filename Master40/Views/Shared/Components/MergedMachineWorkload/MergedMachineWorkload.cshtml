@{
    Layout = "_Layout";
    ChartJSCore.Models.Chart chart = (ChartJSCore.Models.Chart)ViewData["chart"];
    string raw = "Chart Rendering Failed";
    if (chart != null)
    {
        raw = chart.CreateChartCode("MaschineChartMerged");
        // buxfix in ChartJS Core
        raw = raw.Replace("\"false\"", "false").Replace("yAxesID", "yAxisID");
    }

}
<style>
    .chartWrapper {
        position: relative;
    }

        .chartWrapper > canvas {
            position: absolute;
            left: 0;
            top: 0;
            pointer-events: none;
        }

    .chartAreaWrapper {
        overflow-x: auto;
        position: relative;
        width: 100%;
    }

    .chartAreaWrapper2 {
        position: relative;
        height: 400px;
    }
</style>
<div class="row" style="width: 900px; height: 450px; padding: 10px, 0px, 10px, 0px;">
    <p style="text-align: center; padding: 5px">
        <h4>Machine Workload - Central and Decentral</h4>
    </p>
        <div class="col-md-8">
            <div class="chartWrapper">
                <div class="chartAreaWrapper">
                    <div class="chartAreaWrapper2">
                        <!--div id="js-legend" class="chart-legend"><div-->
                        <canvas id="MaschineChartMerged" height="500" width="0"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <table class="table table-responsive table-striped table-condensed">
                <thead>
                <tr>
                    <th>Machine</th>
                    <th>Decentral</th>
                    <th>Central</th>
                </tr>
                </thead>

                @for (int i = 0; i < 5; i++)
                {
                    <tr>
                        <td>@chart.Data.Labels[i]</td>
                       @for(var j = 0; j < chart.Data.Datasets.Count; j++ ) { 
                        <td>@chart.Data.Datasets[j].Data[i] %</td>
                       }
                    </tr>
                }
            </table>
        </div>   
</div>
<script>
    @Html.Raw(raw);
</script>
