@model IEnumerable<Master40.DB.Models.ArticleBom>
@{
    string level = ViewData["level"]?.ToString() ?? "";
    level = (level != "") ? level + "." : level;
    int count = 0;
    string display = "";
}
@if (Model.Count() > 0 && Model != null)
{
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @{ count = count + 1; display = level + count.ToString(); }
                @display
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ArticleChild.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ArticleParent.Id)
            </td>
            <td>
                @foreach (var ag in item.ArticleChild.WorkSchedules)
                {
                    <table>
                        <tr>
                            <td style="width: 25px;">@ag.HierarchyNumber</td>
                            <td>@ag.Name</td>
                        </tr>
                    </table>
                }
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        if (item.ArticleChild.ArticleBoms != null)
        {
            ViewData["level"] = level + count.ToString();
            @Html.Partial("ArticleBom", item.ArticleChild.ArticleBoms, this.ViewData)
            }
        }
}